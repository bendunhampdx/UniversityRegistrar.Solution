@{
  Layout = "_Layout";
}

@model University.Models.Student

<h2>Student Details</h2>
<hr />
<h3>@Html.DisplayNameFor(model => model.Name): @Html.DisplayFor(model => model.Name)</h3>
<h3>@Html.DisplayNameFor(model => model.DateOfEnrollment): @Html.DisplayFor(model => model.DateOfEnrollment)</h3>
@if(@Model.JoinEntities.Count == 0)
{
  <p>This student does not belong to any categories</p>
}
else
{
<h4>Courses the student belongs to:</h4>
<ul>
  @foreach(var join in Model.JoinEntities)
  {
    <li>@join.Course.Name</li>
  }
</ul>
}
<ul>
  @foreach(var join in Model.JoinEntities)
  {
    @using (Html.BeginForm("DeleteCourse", "Students"))
    {
      @Html.Hidden("JoinId", @join.CourseStudentId)
      <input type="submit" value="Delete"/>
    }
  }
</ul>
@if(Model.DepartmentJoinEntities.Count == 0)
{
  <p>This student has not yet declared a major</p>
}
else
{
    <h3>This student has the following majors:</h3>
  <ul>
  @foreach(var join in Model.DepartmentJoinEntities)
  {
    <li>@join.Department.Name
    <div class="form-div">
      @using (Html.BeginForm("DeleteDepartment", "Students"))
      {
        @Html.Hidden("joinId", @join.DepartmentStudentId)
        <input type="submit" value="Drop Major from Student"/>
      }
    </div></li>
  }
  </ul>
}

@if(Model.DepartmentJoinEntities.Count < 2)
{
  <h4>Declare a major:</h4>
  @using (Html.BeginForm("AddDepartment", "Students"))
  {
    @Html.HiddenFor(model => model.StudentId)

    @Html.Label("Add a major ")
    @Html.DropDownList("DepartmentId")

    <input type="submit" value="Declare Major"/>
  }
}
else
{
  <p>This student already has a joint major. Delete a current major to be able to add another. Email your advisor for more information.</p>
}



<p>@Html.ActionLink("Add a Course", "AddCourse", new { id = Model.StudentId })</p>
<p>@Html.ActionLink("Back to list", "Index")</p>
<p>@Html.ActionLink("Edit Student", "Edit", new { id = Model.StudentId })</p>
<p>@Html.ActionLink("Delete Student", "Delete", new { id = Model.StudentId })</p>